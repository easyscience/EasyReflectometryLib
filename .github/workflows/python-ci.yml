# This workflow will for a variety of Python versions 
# - install the code base using pixi
# - lint the code base
# - test the code base
# - upload the test coverage to codecov
#
# It will also
# - build the package
# - check the package
#
name: CI using pixi

on: [push, pull_request]

jobs:
  Code_Consistency:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          run-install: false
          cache: false
          post-cleanup: false

      - name: Run ruff check
        run: pixi run lint

      - name: Suggestion to fix issues
        if: ${{ failure() }}
        run: |
            echo "::notice::In project root run 'pixi run lint-fix' and commit changes to fix issues."
            exit 1

  Code_Testing:
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.11', '3.12', '3.13']
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.9.0
      with:
        run-install: false
        cache: false
        post-cleanup: false

    - name: Install dependencies
      run: python -m pip install -e '.[dev]'

    - name: Test with pytest and coverage
      run: |
        python -m pip install tox tox-gh-actions coverage
        python -m tox

    - name: Upload coverage reports to Codecov
      # only on ubuntu to avoid multiple uploads
      if: runner.os == 'Linux'
      uses: codecov/codecov-action@v5
      with:
        name: unit-tests-job
        flags: unittests
        files: ./coverage-unit.xml
        fail_ci_if_error: true
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: EasyScience/EasyReflectometryLib


  Package_Testing:
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies and build
      run: |
        python -m pip install -e '.[dev]'
        python -m build

    - name: Check Build
      run: |
        cd ./dist
        python -m pytest ../
